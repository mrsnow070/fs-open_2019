{"version":3,"sources":["services/phonebookService.js","components/PersonForm/PersonForm.js","components/Filter/Filter.js","components/Persons/Persons.js","components/Notification/Notification.js","App.js","index.js"],"names":["baseUrl","getAll","axios","get","then","resp","data","catch","error","console","log","updatePersons","updateNotification","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","e","name","preventDefault","filter","person","id","length","post","postAddEntry","number","type","message","window","confirm","put","value","onChange","target","updateFilter","persons","deleteHandler","updatedPersons","p","delete","deleteEntry","findMatches","wordToMatch","string","regex","RegExp","match","map","key","onClick","personsToShow","Notification","setter","className","useEffect","setTimeout","push","join","App","setPersons","notificationMessage","setNotificationMessage","setFilter","Filter","PersonForm","Persons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf1d0286.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nexport const getAll = () => {\r\n    return axios.get(baseUrl)\r\n        .then(resp => resp.data)\r\n        .catch(error => console.log('fail ', error));\r\n}\r\n\r\nexport const postAddEntry = (data) => {\r\n    return axios.post(baseUrl, data)\r\n        .then(resp => resp)\r\n}\r\n\r\nexport const deleteEntry = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`);\r\n}\r\n\r\nexport const putUpdateNumber = (id, person) => {\r\n    return axios.put(`${baseUrl}/${id}`, person)\r\n}\r\n\r\nexport const getByName = name => {\r\n    return axios.get(baseUrl)\r\n        .then(resp => resp.data.filter((person) => {\r\n\r\n            return person.name === name\r\n        }))\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { postAddEntry, putUpdateNumber, getByName, getAll } from '../../services/phonebookService';\r\n\r\nexport default ({ updatePersons, updateNotification }) => {\r\n\r\n    const [newName, setNewName] = useState('');\r\n    const [newNumber, setNewNumber] = useState('');\r\n\r\n    const inputNameHandler = (e) => {\r\n        setNewName(e.target.value)\r\n    }\r\n    const inputNumberHandler = (e) => setNewNumber(e.target.value);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        getByName(newName).then(data => {\r\n            if (data.length === 0) {\r\n                //не существует такого\r\n                postAddEntry({ name: newName, number: newNumber })\r\n                    .then(resp => {\r\n                        updateNotification({ type: 'notification', message: `Added ${newName}` })\r\n                        getAll()\r\n                            .then(resp => updatePersons(resp));\r\n                        return [setNewName(''), setNewNumber('')];\r\n                    });\r\n            } else {\r\n                if (window.confirm(`${newName} is already added to phonebook. Replace old number with a new one?`)) {\r\n                    putUpdateNumber(data[0].id, { ...data[0], number: newNumber })\r\n                        .then(resp => {\r\n                            updateNotification({ type: 'notification', message: `Number ${newName} is changed` });\r\n                            getAll()\r\n                                .then(resp => updatePersons(resp));\r\n                            return [setNewName(''), setNewNumber('')];\r\n                        })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div>\r\n                name: <input value={newName} onChange={inputNameHandler} />\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={inputNumberHandler} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};","import React from 'react';\r\n\r\nexport default ({ filter, updateFilter}) => {\r\n    const inputFilterHandler = e => {\r\n        updateFilter(e.target.value);\r\n        \r\n        \r\n\r\n    }\r\n    return (\r\n        <div>\r\n            filter shown with: <input value={filter} onChange={inputFilterHandler} />\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\nimport { deleteEntry } from '../../services/phonebookService'\r\n\r\nexport default ({ filter, persons, updatePersons, updateNotification }) => {\r\n\r\n    const deleteHandler = (id, name) => {\r\n        const updatedPersons = persons.filter(p => p.id !== id);\r\n        if (window.confirm(`Do you really want delete ${name}`)) {\r\n\r\n            deleteEntry(id).then(resp => {\r\n                updatePersons([...updatedPersons])\r\n                updateNotification({ type: 'notification', message: `${name} successely deleted` })\r\n\r\n            }).catch(error => {\r\n                updateNotification({\r\n                    type: 'error',\r\n                    message: `Information of ${name} has already removed from server`\r\n                });\r\n                updatePersons(persons.filter(person => person.name !== name))\r\n            })\r\n        }\r\n    }\r\n\r\n    const personsToShow = (filter) => {\r\n\r\n        return findMatches(filter, persons).map(\r\n            person => <p\r\n                key={person.name}\r\n            >\r\n                {person.name} {person.number} <button onClick={() => deleteHandler(person.id, person.name)}>delete &times;\r\n                </button>\r\n            </p>\r\n        )\r\n\r\n    };\r\n\r\n    const findMatches = (wordToMatch, persons) => {\r\n        return persons.filter(string => {\r\n            const regex = new RegExp(wordToMatch, 'gi');\r\n            return string.name.match(regex);\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        personsToShow(filter)\r\n    )\r\n\r\n};","import React, { useEffect } from 'react';\r\n\r\nconst Notification = ({ message, type, setter }) => {\r\n    \r\n    let className = ['announce']\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            \r\n            setter({ type: null, message: '' })\r\n        }, 4000)\r\n    }, [message, setter, className, type])\r\n\r\n    if (type === 'error') {\r\n        className.push('error')\r\n    }\r\n    if (type === 'notification') {\r\n        className.push('notification');\r\n    }\r\n    if (type === null) {\r\n        return null\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={className.join(' ')}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm/PersonForm';\nimport Filter from './components/Filter/Filter';\nimport Persons from './components/Persons/Persons';\nimport { getAll } from \"./services/phonebookService\";\nimport Notification from './components/Notification/Notification';\n\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [notificationMessage, setNotificationMessage] = useState({\n    type: null,\n    message: ''\n  })\n\n  useEffect(() => {\n    getAll().then(resp => setPersons([...resp]))\n\n  }, [])\n\n  const [filter, setFilter] = useState('');\n\n  return (\n    <div>\n      {notificationMessage.type === null ? null\n        : <Notification\n          type={notificationMessage.type}\n          message={notificationMessage.message}\n          setter={setNotificationMessage}\n        />\n      }\n      <h2>Phonebook</h2>\n      <Filter filter={filter} updateFilter={setFilter} />\n\n      <h2>Add a new</h2>\n      <PersonForm updatePersons={setPersons} updateNotification={setNotificationMessage} />\n\n      <h2>Numbers</h2>\n      <Persons filter={filter} persons={persons} updatePersons={setPersons} updateNotification={setNotificationMessage} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}